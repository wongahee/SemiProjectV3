<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pds">

    <insert id="insertPds" statementType="PREPARED"
            parameterType="gahee.spring.mvc.vo.Pds">
        insert into pds (title, userid, contents,
                         fname1, fname2, fname3, fsize1, fsize2, fsize3,
                         ftype1, ftype2, ftype3, uuid)
        values (#{title},#{userid},#{contents},#{fname1},#{fname2},#{fname3},#{fsize1},#{fsize2},#{fsize3},
                #{ftype1},#{ftype2},#{ftype3},#{uuid})
    </insert>

    <select id="selectPds" statementType="PREPARED"
            parameterType="int" resultType="gahee.spring.mvc.vo.Pds">
        select pno, title, userid, regdate, thumbup, views from pds
        order by pno desc limit #{snum}, 30
    </select>

    <select id="countPds" statementType="PREPARED"
            resultType="int">
        select count(pno) cnt from pds
    </select>

    <select id="selectOnePds" statementType="PREPARED"
            parameterType="String" resultType="gahee.spring.mvc.vo.Pds">
        select * from pds where pno = #{pno}
    </select>

    <!-- 다운로드 -->
    <select id="selectFname" statementType="PREPARED"
            parameterType="Map" resultType="gahee.spring.mvc.vo.Pds">
        select ${order} fname1, uuid from pds
        where pno = #{pno}
    </select>

    <!-- 다운로드수 증가 -->
    <update id="updateDown" statementType="PREPARED"
            parameterType="Map">
        update pds set ${order} = ${order} + 1
        where pno = #{pno}
    </update>

    <!-- 추천수 증가 -->
    <update id="updateThumbs" statementType="PREPARED"
            parameterType="String">
        update pds set thumbup = thumbup + 1
        where pno = #{pno}
    </update>

    <!-- 이전/다음글 -->
    <select id="selectPrev" statementType="PREPARED"
            parameterType="String" resultType="String">
        select prev from (
                          select pno, lead(pno) over(order by pno desc) prev
                          from pds) newone
        where pno = #{pno}
    </select>

    <select id="selectNext" statementType="PREPARED"
            parameterType="String" resultType="String">
        select next from (
                      select pno, lag(pno) over(order by pno desc) next
                      from pds
                      ) newone
        where pno = #{pno}
    </select>

    <!-- 게시글 삭제 -->
    <delete id="deletePds" statementType="PREPARED"
            parameterType="String">
            delete from pds where pno = #{pno}
    </delete>

</mapper>